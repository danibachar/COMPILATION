array ints = int[]

int search(ints data, int size, int key){
	int low;
	low := 0;
	int high;
	high := size - 1;
	int middle;

	while(high > low - 1) {
		middle := (low + high) / 2;
		if(data[middle] = key) {
			return 1;
		}
		if(data[middle] < key) {
			low := middle + 1;
		}
		if(data[middle] > key) {
			high := middle - 1;
		}
	}
	return 0;
}

void main(){
	ints data := new int[17];

	data[0] := -9999;
	data[1] := -2334;
	data[2] := -999;
	data[3] := -314;
	data[4] := -34;
	data[5] := 0;
	data[6] := 232;
	data[7] := 300;
	data[8] := 400;
	data[9] := 500;
	data[10] := 999;
	data[11] := 1000;
	data[12] := 1220;
	data[13] := 1430;
	data[14] := 2220;
	data[15] := 2990;
	data[16] := 9999;

	PrintInt(search(data, 17, -32768));
	PrintInt(search(data, 17, -2334));
	PrintInt(search(data, 17, -999));
	PrintInt(search(data, 17, -314));
	PrintInt(search(data, 17, -34));
	PrintInt(search(data, 17, 0));
	PrintInt(search(data, 17, 232));
	PrintInt(search(data, 17, 300));
	PrintInt(search(data, 17, 400));
	PrintInt(search(data, 17, 500));
	PrintInt(search(data, 17, 999));
	PrintInt(search(data, 17, 1000));
	PrintInt(search(data, 17, 1220));
	PrintInt(search(data, 17, 1430));
	PrintInt(search(data, 17, 2220));
	PrintInt(search(data, 17, 2990));
	PrintInt(search(data, 17, 32767));

	PrintInt(search(data, 17, 34));
	PrintInt(search(data, 17, 16));
	PrintInt(search(data, 17, 17));
	PrintInt(search(data, 17, -344));
	PrintInt(search(data, 17, 111));
	PrintInt(search(data, 17, -500));
	PrintInt(search(data, 17, 1));
}
